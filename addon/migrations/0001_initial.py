# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2018-04-22 17:18
from __future__ import unicode_literals

import addon.models.subscription_optional_interface
import base.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('gatheros_subscription', '0011_auto_20180418_2232'),
    ]

    operations = [
        migrations.CreateModel(
            name='OptionalProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_end', models.DateTimeField(verbose_name='data final')),
                ('description', models.TextField(verbose_name='descrição')),
                ('quantity', models.PositiveIntegerField(verbose_name='quantidade')),
                ('published', models.BooleanField(verbose_name='publicado')),
                ('has_cost', models.BooleanField(verbose_name='possui custo')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='criado')),
                ('modified', models.DateTimeField(auto_now=True, null=True, verbose_name='modificado')),
                ('created_by', models.CharField(editable=False, max_length=255, null=True, verbose_name='criado por')),
                ('modified_by', models.CharField(max_length=255, null=True, verbose_name='modificado por')),
                ('lot_categories', models.ManyToManyField(related_name='optionalproduct_optionals', to='gatheros_subscription.LotCategory', verbose_name='categorias')),
            ],
            options={
                'abstract': False,
            },
            bases=(base.models.EntityMixin, models.Model),
        ),
        migrations.CreateModel(
            name='OptionalService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_end', models.DateTimeField(verbose_name='data final')),
                ('description', models.TextField(verbose_name='descrição')),
                ('quantity', models.PositiveIntegerField(verbose_name='quantidade')),
                ('published', models.BooleanField(verbose_name='publicado')),
                ('has_cost', models.BooleanField(verbose_name='possui custo')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='criado')),
                ('modified', models.DateTimeField(auto_now=True, null=True, verbose_name='modificado')),
                ('created_by', models.CharField(editable=False, max_length=255, null=True, verbose_name='criado por')),
                ('modified_by', models.CharField(max_length=255, null=True, verbose_name='modificado por')),
                ('start_on', models.DateTimeField(verbose_name='data de inicio')),
                ('duration', models.PositiveIntegerField(verbose_name='duração')),
                ('lot_categories', models.ManyToManyField(related_name='optionalservice_optionals', to='gatheros_subscription.LotCategory', verbose_name='categorias')),
            ],
            options={
                'abstract': False,
            },
            bases=(base.models.EntityMixin, models.Model),
        ),
        migrations.CreateModel(
            name='OptionalType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='nome')),
            ],
            bases=(base.models.EntityMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Price',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='preço')),
                ('release_days', models.PositiveIntegerField(help_text='Número de dias para liberar as vagas de opcionais.', verbose_name='dias para liberação')),
                ('lot_category', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='prices', to='gatheros_subscription.LotCategory')),
            ],
            bases=(base.models.EntityMixin, models.Model),
        ),
        migrations.CreateModel(
            name='SubscriptionOptionalProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('optional_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='addon.OptionalProduct', verbose_name='opcional de produto')),
            ],
            bases=(base.models.EntityMixin, models.Model, addon.models.subscription_optional_interface.SubscriptionOptionalInterface),
        ),
        migrations.CreateModel(
            name='SubscriptionOptionalService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('optional', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='services', to='addon.OptionalService', verbose_name='opcional de serviço')),
            ],
            bases=(base.models.EntityMixin, models.Model, addon.models.subscription_optional_interface.SubscriptionOptionalInterface),
        ),
        migrations.CreateModel(
            name='Theme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='nome')),
            ],
            bases=(base.models.EntityMixin, models.Model),
        ),
        migrations.AddField(
            model_name='optionalservice',
            name='optional_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='optionalservice_optionals', to='addon.OptionalType', verbose_name='tipo'),
        ),
        migrations.AddField(
            model_name='optionalservice',
            name='theme',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='services', to='addon.Theme', verbose_name='themas'),
        ),
        migrations.AddField(
            model_name='optionalproduct',
            name='optional_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='optionalproduct_optionals', to='addon.OptionalType', verbose_name='tipo'),
        ),
    ]
