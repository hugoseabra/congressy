# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2018-03-22 17:25
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import survey.models.mixins


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.TextField(verbose_name='valor')),
                ('human_display', models.CharField(blank=True, max_length=255, null=True, verbose_name='nome exibido a humanos')),
                ('created', models.DateTimeField(auto_now=True, verbose_name='criado em')),
            ],
            options={
                'verbose_name': 'resposta',
                'verbose_name_plural': 'respostas',
            },
            bases=(survey.models.mixins.Entity, models.Model),
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='nome')),
                ('created', models.DateTimeField(auto_now=True, verbose_name='criado em')),
            ],
            options={
                'verbose_name': 'autor',
                'verbose_name_plural': 'autores',
            },
            bases=(survey.models.mixins.Entity, models.Model),
        ),
        migrations.CreateModel(
            name='Option',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='nome')),
                ('value', models.CharField(blank=True, max_length=255, null=True, verbose_name='valor')),
                ('active', models.BooleanField(default=True, verbose_name='ativo')),
            ],
            options={
                'verbose_name': 'Opção de uma pergunta',
                'verbose_name_plural': 'Opções de uma pergunta',
            },
            bases=(survey.models.mixins.Entity, models.Model),
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('input-text', 'Texto (255 caracteres)'), ('input-number', 'Número'), ('input-date', 'Data'), ('input-datetime-local', 'Data e hora'), ('input-email', 'E-mail'), ('input-phone', 'Telefone'), ('textarea', 'Texto longo'), ('boolean', 'SIM/NÃO'), ('select', 'Lista simples'), ('checkbox-group', 'Múltipla escolha'), ('radio-group', 'Escolha única')], max_length=50, verbose_name='tipo')),
                ('name', models.CharField(max_length=255, verbose_name='nome')),
                ('label', models.CharField(max_length=255, verbose_name='nome do campo')),
                ('required', models.BooleanField(default=False, verbose_name='obrigatoriedade')),
                ('help_text', models.CharField(blank=True, max_length=255, null=True, verbose_name='texto de ajuda')),
                ('active', models.BooleanField(default=True, verbose_name='ativo')),
                ('intro', models.BooleanField(default=False, verbose_name='primeira entrada vazia.')),
                ('order', models.PositiveIntegerField(blank=True, default=None, verbose_name='ordem da pergunta')),
            ],
            options={
                'verbose_name': 'Pergunta de Questionario',
                'verbose_name_plural': 'Perguntas de Questionario',
            },
            bases=(survey.models.mixins.Entity, models.Model),
        ),
        migrations.CreateModel(
            name='Survey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='nome')),
                ('description', models.TextField(blank=True, null=True, verbose_name='descrição')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='criado em')),
            ],
            options={
                'verbose_name': 'questionario',
                'verbose_name_plural': 'questionarios',
            },
            bases=(survey.models.mixins.Entity, models.Model),
        ),
        migrations.AddField(
            model_name='question',
            name='survey',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='survey.Survey', verbose_name='questionario'),
        ),
        migrations.AddField(
            model_name='option',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='survey.Question', verbose_name='pergunta'),
        ),
        migrations.AddField(
            model_name='author',
            name='survey',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='authors', to='survey.Survey', verbose_name='autor'),
        ),
        migrations.AddField(
            model_name='author',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='authors', to=settings.AUTH_USER_MODEL, verbose_name='usuario'),
        ),
        migrations.AddField(
            model_name='answer',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='survey.Author', verbose_name='autor'),
        ),
        migrations.AddField(
            model_name='answer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='survey.Question', verbose_name='pergunta'),
        ),
        migrations.AlterUniqueTogether(
            name='question',
            unique_together=set([('survey', 'name')]),
        ),
        migrations.AlterUniqueTogether(
            name='option',
            unique_together=set([('question', 'value')]),
        ),
    ]
