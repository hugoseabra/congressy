###############################################################################
# CUIDADO!
# Esta script é gerenciado pelo CI. Não altere ou mude sem saber o que está
# fazendo.
###############################################################################
# CI-STEP: Destruir e (re)criar container de versão de staging
#
# - o container usa o banco de dados cgsy-postgres criado externamente, que é o
#   mesmo utilizado para o ambiente de desenvolvimento (local).
# - IMPORTANTE manter o nome do container como "manage-staging" pois outros
#   scripts utilizam esta referência.
# - env-file "env-manage-staging" é construído pelo CI dinamicamente por causa
#   das informações sensíveis.
###############################################################################
version: '3.5'
services:
  # Preparação de volumes.
  migration:
    image: cgsy-staging
    hostname: migration-staging
    entrypoint:
      - /staging/services/migration/container-entry.sh
    env_file:
      - /tmp/staging-files/env-manage-staging
    networks:
      - postgres

  volume:
    image: cgsy-staging
    hostname: volume-staging
    depends_on:
      - migration
    entrypoint:
      - /staging/services/volume/container-entry.sh
    env_file: /tmp/staging-files/env-manage-staging
    volumes:
      - /etc/localtime:/etc/localtime
      - staging_media:/code/media
      - staging_exporter:/tmp/exporter
      - staging_barcodes:/tmp/barcodes
      - staging_qrcodes:/tmp/qrcodes
      - staging_vouchers:/tmp/vouchers

  reverse-proxy:
    image: traefik:v1.7.19-alpine
    command:
      - --api
      - --docker
      - --accesslog
      - --accesslog.format=json
      - --accesslog.fields.names="StartLocal=keep StartUTC=keep"
    networks:
      - traefik
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /tmp/staging-files/traefik.toml:/etc/traefik/traefik.toml
      - /var/run/docker.sock:/var/run/docker.sock # So that Traefik can listen to the Docker events
      - /etc/localtime:/etc/localtime:ro

  celery:
    image: cgsy-staging
    restart: unless-stopped
    hostname: staging-celery
    networks:
      - postgres
      - mailhog
      - wkhtmltopdf
      - rabbitmq
    entrypoint:
      - /staging/services/celery/container-entry.sh
    volumes:
      - staging_media:/code/media
      - staging_exporter:/tmp/exporter
      - staging_barcodes:/tmp/barcodes
      - staging_qrcodes:/tmp/qrcodes
      - staging_vouchers:/tmp/vouchers
    env_file: /tmp/staging-files/env-manage-staging

  cron:
    image: cgsy-staging
    hostname: cron-staging
    depends_on:
      - migration
      - volume
    entrypoint:
      - /staging/services/cron/container-entry.sh
    networks:
      - postgres
      - mailhog
      - wkhtmltopdf
      - rabbitmq
    env_file: /tmp/staging-files/env-manage-staging
    volumes:
      - staging_media:/code/media
      - staging_exporter:/tmp/exporter
      - staging_barcodes:/tmp/barcodes
      - staging_qrcodes:/tmp/qrcodes
      - staging_vouchers:/tmp/vouchers

  manage:
    image: cgsy-staging
    hostname: manage-staging
#    healthcheck:
#      test: "/code/bin/env/healthcheck.sh"
#      interval: 30s
#      timeout: 10s
#      retries: 3
#      start_period: 0s
    depends_on:
      - migration
    entrypoint:
      - /staging/services/web/manage/container-entry.sh
    networks:
      - postgres
      - mailhog
      - wkhtmltopdf
      - rabbitmq
      - traefik
    ports:
      - "8000"
    env_file: /tmp/staging-files/env-manage-staging
    volumes:
      - staging_media:/code/media
      - staging_exporter:/tmp/exporter
      - staging_barcodes:/tmp/barcodes
      - staging_qrcodes:/tmp/qrcodes
      - staging_vouchers:/tmp/vouchers
    labels:
      - "traefik.enable=true"
      - "traefik.frontend.passHostHeader=true"
      - "traefik.weight=10"
      - "traefik.backend=cgsy-staging"
      - "traefik.protocol=http"
      - "traefik.port=8000"
      - "traefik.frontend.rule=Host:test.congressy.com"
      - "traefik.docker.network=traefik_default"
      - "traefik.frontend.entryPoints=http"

  hotsite:
    image: 871800672816.dkr.ecr.us-east-1.amazonaws.com/hotsite-v2
    container_name: cgsy-hotsite
    ports:
      - 80
    networks:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.frontend.passHostHeader=true"
      - "traefik.weight=10"
      - "traefik.backend=cgsy-hotsite"
      - "traefik.protocol=http"
      - "traefik.port=80"
      - "traefik.frontend.rule=Host:test.congressy.com;AddPrefix:/1"
      - "traefik.docker.network=traefik_default"
      - "traefik.frontend.entryPoints=http"

networks:
  traefik:
    name: traefik_default
  postgres:
    external:
      name: local_postgres
  mailhog:
    external:
      name: local_mailhog
  wkhtmltopdf:
    external:
      name: local_wkhtmltopdf
  rabbitmq:
    external:
      name: local_rabbitmq

volumes:
  staging_media:
    external: true
  staging_exporter:
    external: true
  staging_barcodes:
    external: true
  staging_qrcodes:
    external: true
  staging_vouchers:
    external: true
