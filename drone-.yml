services:
  database:
    image: postgres:9.6-alpine
    networks:
      - postgres
    environment:
      - POSTGRES_DB=cgsyplatform
      - POSTGRES_USER=congressy
      - POSTGRES_PASSWORD=congressy

networks:
  postgres:

volumes:
  postgres_backup:

clone:
  git:
    image: plugins/git
    depth: 50
    tags: true

pipeline:
  database-backup:
    image: postgres:9.6-alpine
    volumes:
      - postgres_backup:/bkp
    commands:
      - |
        PGPASSWORD=4UnADjyMjeeB7GSc pg_dump \
          --format=c \
          --host congressy.cy6gssymlczu.us-east-1.rds.amazonaws.com \
          --port 5499 \
          --username congressy \
          --verbose \
          cgsyplatform > /bkp/backup.sql
      - |
        echo Backup size: `du -h /bkp/backup.sql`
    when:
      branch:
        include: [ hotfix/*, release/* ]

  database-restore:
    image: postgres:9.6-alpine
    volumes:
      - postgres_backup:/bkp
    commands:
      - sleep 10
      - |
        PGPASSWORD=congressy pg_restore \
          --host database \
          --username congressy \
          --schema public \
          --verbose \
          --dbname cgsyplatform < /bkp/backup.sql
    when:
      branch:
        include: [ hotfix/*, release/* ]

  save-staging-version:
    image: indiehosters/git
    pull: true
    commands:
      - basename ${DRONE_COMMIT_BRANCH} > version
    when:
      branch:
        include: [ hotfix/*, release/* ]

  build-staging-image:
    image: docker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    commands:
      - |
        echo "Building version: `cat ./version`"
      - |
        docker build \
          -t cgsy-staging \
          -f ./conf/staging/Dockerfile .
    when:
      branch:
        include: [ hotfix/*, release/* ]

  deploy-staging-env:
    image: docker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    commands:
      - docker run --rm -tid --name cgsy \
        --env AWS_KEY= \
        --env AWS_KEY= \
        -p 80:80 \
        cgsy-staging


        AWS_KEY=
AWS_SECRET=
DOMAIN=ev.congressy.com
FORCE_HTTPS=False
BUCKET_LOCATION=us-east-1
BUCKET_NAME=cgsyplatform
CRON_SYNC_MINUTES_OUT=8
CRON_SYNC_MINUTES_IN=5
DBHOST=postgres
DBUSER=postgres
DBPASS=
DBNAME=cgsy_dev
DBPORT=5432


    when:
      branch:
        include: [ hotfix/*, release/* ]

  save-prod-version:
    image: indiehosters/git
    pull: true
    commands:
      - ./bin/version.sh > version
    when:
      branch:
        include: [ master ]
