# Branches added globally
branches:
  include: [master, release/*, hotfix/*]

# Custom definition for cloning, adding tags and depth
clone:
  git:
    image: plugins/git
    depth: 50
    tags: true

# Steps of deploy, according to configurations and conditionals
pipeline:
  save-prod-version:
    image: indiehosters/git
    pull: true
    commands:
      - export REF_TAG=$(git for-each-ref refs/tags --sort=-taggerdate --format='%(refname)' --count=1)
      - export LAST_TAG=$(basename $${REF_TAG})
      - echo $${LAST_TAG} > version
      - cat version
    when:
      branch: [ hotfix/*, release/* ]

  check-latest-version:
    image: python:3.6-alpine
    pull: true
    commands:
      - pip3 install --no-cache-dir semver clint
      - python3 ./bin/env/prod/01_check-latest-version.py
    when:
      branch: [ hotfix/*, release/* ]

  build-prod-images:
    image: docker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    commands:
      - export REPO="871800672816.dkr.ecr.us-east-1.amazonaws.com/cgsy"
      - docker build --rm -t $${REPO}:latest -f ./conf/deploy/Dockerfile .
      - docker tag $${REPO}:latest $${REPO}:`cat ./version`
    when:
      branch: [ hotfix/*, release/* ]

  create-awsecr:
    image: docker
    pull: true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    secrets: [
      aws_key,
      aws_secret,
      aws_account_id
    ]
    commands:
      - echo "AWS_KEY=$${AWS_KEY}" > ./bin/env/prod/env-awsecr
      - echo "AWS_SECRET=$${AWS_SECRET}" >> ./bin/env/prod/env-awsecr
      - echo "AWS_ACCOUNT_ID=$${AWS_ACCOUNT_ID}" >> ./bin/env/prod/env-awsecr
      - sh ./bin/env/prod/02_create-awsecr-container.sh
    when:
      branch: [ hotfix/*, release/* ]

  publish-images:
    image: docker
    pull: true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    commands:
      - BUILD=$(cat ./bin/env/prod/tagged_version)
      - docker exec -i awsecr push cgsy:latest
      - ./bin/env/prod/03_publish-tagged-version.sh
      - docker system prune -f --filter 'label=cgsy.image.name=cgsy-platform-production'
    when:
      branch: [ hotfix/*, release/* ]
