# Branches added globally
branches:
  include: [master, release/*, hotfix/*]

# Custom definition for cloning, adding tags and depth
clone:
  git:
    image: plugins/git
    depth: 50
    tags: true

# Steps of deploy, according to configurations and conditionals
pipeline:
  deploy-staging-env:
    image: tmaier/docker-compose
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    secrets: [
      aws_key,
      aws_secret,
      domain_staging,
      force_https_staging,
      bucket_location,
      bucket_name,
      cron_sync_minutes_out,
      cron_sync_minutes_in,
      dbhost_staging,
      dbuser_staging,
      dbname_staging,
      dbport_staging,
    ]
    commands:
      - echo "AWS_KEY=$${AWS_KEY}" > ./bin/env/staging/env-cgsy-staging
      - echo "AWS_SECRET=$${AWS_SECRET}" >> ./bin/env/staging/env-cgsy-staging
      - echo "DOMAIN=$${DOMAIN_STAGING}" >> ./bin/env/staging/env-cgsy-staging
      - echo "FORCE_HTTPS=$${FORCE_HTTPS_STAGING}" >> ./bin/env/staging/env-cgsy-staging
      - echo "BUCKET_LOCATION=$${BUCKET_LOCATION}" >> ./bin/env/staging/env-cgsy-staging
      - echo "BUCKET_NAME=$${BUCKET_NAME}" >> ./bin/env/staging/env-cgsy-staging
      - echo "CRON_SYNC_MINUTES_OUT=$${CRON_SYNC_MINUTES_OUT}" >> ./bin/env/staging/env-cgsy-staging
      - echo "CRON_SYNC_MINUTES_IN=$${CRON_SYNC_MINUTES_IN}" >> ./bin/env/staging/env-cgsy-staging
      - echo "DBHOST=$${DBHOST_STAGING}" >> ./bin/env/staging/env-cgsy-staging
      - echo "DBUSER=$${DBUSER_STAGING}" >> ./bin/env/staging/env-cgsy-staging
      - echo "DBNAME=$${DBNAME_STAGING}" >> ./bin/env/staging/env-cgsy-staging
      - echo "DBPORT=$${DBPORT_STAGING}" >> ./bin/env/staging/env-cgsy-staging
      - sh ./bin/env/staging/start-cgsy-staging.sh

    when:
      branch: [ hotfix/*, release/* ]
