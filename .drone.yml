clone:
  git:
    image: plugins/git
    depth: 50
    tags: true

pipeline:
  create-db-prod-backup:
    image: postgres:9.6-alpine
    volumes:
      - /tmp/bkp:/tmp/bkp
    commands:
      - mkdir -p /tmp/bkp/backup
      - |
        PGPASSWORD=4UnADjyMjeeB7GSc pg_dump \
          --host congressy.cy6gssymlczu.us-east-1.rds.amazonaws.com \
          --port 5499 \
          --username congressy \
          --format=c \
          --verbose \
          cgsyplatform > /tmp/bkp/backup/backup.sql
      - |
        echo Backup size: `du -h /tmp/bkp/backup/backup.sql`
      - cp ./bin/dev/staging/db-restore.sh /tmp/bkp/.

    when:
      branch:
        include: [ hotfix/*, release/* ]

  recreate-staging-db:
    image: tmaier/docker-compose
    pull: true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    commands:
      - sh ./bin/dev/staging/start-postgres.sh
    when:
      branch:
        include: [ hotfix/*, release/* ]

  save-staging-version:
    image: indiehosters/git
    pull: true
    commands:
      - basename ${DRONE_COMMIT_BRANCH} > version
    when:
      branch:
        include: [ hotfix/*, release/* ]

  build-staging-image:
    image: docker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    commands:
      - |
        echo "Building version: `cat ./version`"
      - |
        docker build \
          -t cgsy-staging \
          -f ./conf/staging/Dockerfile .
    when:
      branch:
        include: [ hotfix/*, release/* ]

  deploy-staging-env:
    image: docker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    commands:
      - docker run --rm -tid --name cgsy-staging \
        --network dev_postgres \
        --env AWS_KEY=AKIAJHS7RBNESVTWWI6Q \
        --env AWS_SECRET=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 \
        --env DOMAIN=test.congressy.com \
        --env FORCE_HTTPS=False \
        --env BUCKET_LOCATION=us-east-1 \
        --env BUCKET_NAME=cgsyplatform \
        --env DBHOST=postgres \
        --env DBUSER=congressy \
        --env DBPASS=congressy \
        --env DBNAME=cgsyplatform \
        --env DBPORT=5432 \
        -p 8080:80 \
        cgsy-staging
    when:
      branch:
        include: [ hotfix/*, release/* ]