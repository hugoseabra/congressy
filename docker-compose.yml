version: "3.5"
services:

  postgres:
    image: postgres:9.6-alpine
    container_name: cgsy-postgres
    networks:
      - postgres
    volumes:
      - /etc/localtime:/etc/localtime
      - /tmp/bkp:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=cgsyplatform
      - POSTGRES_USER=congressy
      - POSTGRES_PASSWORD=congressy

  rabbitmq:
    image: rabbitmq:3-management
    container_name: cgsy-rabbitmq
    hostname: cgsyrabbitmq # database unique name
    networks:
      - rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=congressy
      - RABBITMQ_DEFAULT_PASS=cgsy1601
      - RABBITMQ_ERLANG_COOKIE=cgsyrabbitmqservice
    ports:
      - "15672:15672"
      - "5672:5672"
    volumes:
      - ~/rabbitmq-database:/var/lib/rabbitmq/mnesia

  wkhtmltopdf:
    image: openlabs/docker-wkhtmltopdf-aas
    restart: always
    networks:
      - wkhtmltopdf
    volumes:
      - /etc/localtime:/etc/localtime

  celery:
    image: congressy-prod
    restart: unless-stopped
    hostname: HOSTNAME-celery
    networks:
      - wkhtmltopdf
      - rabbitmq
    entrypoint:
      - /deploy/services/celery/container-entry.sh
    volumes:
      - /etc/localtime:/etc/localtime\
      - /tmp/media:/var/www/cgsy/media
      - /tmp/exporter:/tmp/exporter
    env_file: ./env-file

  manage:
    image: congressy-prod
    restart: unless-stopped
    hostname: HOSTNAME-manage
    depends_on:
      - wkhtmltopdf
    networks:
      - wkhtmltopdf
      - rabbitmq
      - postgres
      - traefik
    ports:
      - "8000"
    entrypoint:
      - /deploy/services/web/manage/container-entry.sh
    volumes:
      - /etc/localtime:/etc/localtime
      - /tmp/media:/var/www/cgsy/media
      - /tmp/exporter:/tmp/exporter
      - /tmp/qrcodes:/tmp/qrcodes
      - /tmp/barcodes:/tmp/barcodes
      - /tmp/vouchers:/tmp/vouchers
    env_file:
      - ./env-file
      - ./env-manage-file
    labels:
      - "traefik.frontend.rule=Host:manage.localhost"
      - "traefik.docker.network=traefik_default"

  reverse-proxy:
    image: traefik
    command: --api --docker
    networks:
      - traefik
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # So that Traefik can listen to the Docker events


networks:
  traefik:
    external:
      name: traefik_default
  wkhtmltopdf:
  postgres:
  rabbitmq:




