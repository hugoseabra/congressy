# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2019-04-05 17:28
from __future__ import unicode_literals

import base.models
from decimal import Decimal
from django.db import migrations, models
import django.db.models.deletion
import gatheros_event.models.mixins.gatheros_model_mixin


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('gatheros_subscription', '0020_auto_20190401_2241'),
        ('gatheros_event', '0028_event_transfer_tax'),
    ]

    operations = [
        migrations.CreateModel(
            name='Lot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, verbose_name='nome do lote')),
                ('date_start', models.DateTimeField(verbose_name='data/hora inicial')),
                ('date_end', models.DateTimeField(verbose_name='data/hora final')),
                ('price', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0'), max_digits=8, null=True, verbose_name='preço')),
                ('limit', models.PositiveIntegerField(blank=True, help_text='numero total de inscrições para que o lote', null=True, verbose_name='limite de inscrições')),
                ('num_subs', models.PositiveIntegerField(blank=True, default=0, editable=False, help_text='controle interno para contagem de inscrições', null=True, verbose_name='numero de inscrições')),
                ('last', models.NullBooleanField(editable=False, help_text='controle inter para contagem de inscrições', verbose_name='ultimo lote')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='criado em')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modificado em')),
            ],
            options={
                'verbose_name_plural': 'lotes de ingressos',
                'verbose_name': 'lote de ingressos',
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='nome da categoria')),
                ('description', models.TextField(blank=True, null=True, verbose_name='descrição')),
                ('paid', models.NullBooleanField(default=False, verbose_name='cobrar pela categoria')),
                ('free_installments', models.IntegerField(blank=True, default=0, null=True, verbose_name='absorver taxas de parcelamento')),
                ('active', models.BooleanField(default=True, verbose_name='ativo')),
                ('limit', models.PositiveIntegerField(blank=True, null=True, verbose_name='vagas')),
                ('num_subs', models.PositiveIntegerField(blank=True, default=0, editable=False, help_text='controle interno para contagem de inscrições', null=True, verbose_name='numero de inscrições')),
                ('private', models.NullBooleanField(default=False, verbose_name='privado')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='criado em')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modificado em')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='audience_categories', to='gatheros_event.Event', verbose_name='evento')),
                ('event_survey', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audience_categories', to='gatheros_subscription.EventSurvey', verbose_name='formulário personalizado')),
            ],
            options={
                'verbose_name_plural': 'ingressos',
                'verbose_name': 'ingresso',
            },
            bases=(gatheros_event.models.mixins.gatheros_model_mixin.GatherosModelMixin, base.models.EntityMixin, models.Model),
        ),
        migrations.AddField(
            model_name='lot',
            name='ticket',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='lots', to='ticket.Ticket', verbose_name='ingresso de participante'),
        ),
        migrations.AlterUniqueTogether(
            name='lot',
            unique_together=set([('ticket', 'date_start', 'date_end')]),
        ),
    ]
