# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2019-07-03 15:30
from __future__ import unicode_literals

from django.db import migrations, models, transaction


def correct_event_fk(apps, schema_editor):
    Model = apps.get_model('gatheros_event', 'Info')
    while Model.objects.filter(event2__isnull=True).exists():
        with transaction.atomic():
            for row in Model.objects.filter(event2__isnull=True)[:1000]:
                event = row.event
                row.event2 = event
                row.save()

    Model = apps.get_model('gatheros_event', 'Place')
    while Model.objects.filter(event2__isnull=True).exists():
        with transaction.atomic():
            for row in Model.objects.filter(event2__isnull=True)[:1000]:
                event = row.event
                row.event2 = event
                row.save()

    Model = apps.get_model('gatheros_event', 'FeatureConfiguration')
    while Model.objects.filter(event2__isnull=True).exists():
        with transaction.atomic():
            for row in Model.objects.filter(event2__isnull=True)[:1000]:
                event = row.event
                row.event2 = event
                row.save()

    Model = apps.get_model('gatheros_event', 'FeatureManagement')
    while Model.objects.filter(event2__isnull=True).exists():
        with transaction.atomic():
            for row in Model.objects.filter(event2__isnull=True)[:1000]:
                event = row.event
                row.event2 = event
                row.save()



class Migration(migrations.Migration):
    dependencies = [
        ('gatheros_event', '0031_auto_20190703_1530'),
    ]

    operations = [
        # Mudança agressiva da migração anterior deve setar as contraints
        # com delay. Aguardar set dos contraints para continuar
        migrations.RunSQL('SET CONSTRAINTS ALL IMMEDIATE',
                          reverse_sql=migrations.RunSQL.noop),

        migrations.RunPython(correct_event_fk,
                             reverse_code=migrations.RunPython.noop),
        migrations.RemoveField(
            model_name='info',
            name='event',
        ),
        migrations.RemoveField(
            model_name='place',
            name='event',
        ),
        migrations.RemoveField(
            model_name='featureconfiguration',
            name='event',
        ),
        migrations.RemoveField(
            model_name='featuremanagement',
            name='event',
        ),
        migrations.RenameField(
            model_name='info',
            old_name='event2',
            new_name='event',
        ),
        migrations.RenameField(
            model_name='place',
            old_name='event2',
            new_name='event',
        ),
        migrations.RenameField(
            model_name='featureconfiguration',
            old_name='event2',
            new_name='event',
        ),
        migrations.RenameField(
            model_name='featuremanagement',
            old_name='event2',
            new_name='event',
        ),
        migrations.AlterField(
            model_name='info',
            name='event',
            field=models.OneToOneField(
                on_delete=models.deletion.CASCADE, primary_key=True,
                serialize=False, to='gatheros_event.Event', to_field='uuid',
                verbose_name='evento'),
        ),
        migrations.AlterField(
            model_name='place',
            name='event',
            field=models.OneToOneField(
                on_delete=models.deletion.CASCADE, primary_key=True,
                serialize=False, to='gatheros_event.Event', to_field='uuid',
                verbose_name='evento'),
        ),
        migrations.AlterField(
            model_name='featureconfiguration',
            name='event',
            field=models.OneToOneField(
                on_delete=models.deletion.CASCADE, primary_key=True,
                serialize=False, to='gatheros_event.Event', to_field='uuid',
                verbose_name='evento', related_name='feature_configuration',),
        ),
        migrations.AlterField(
            model_name='featureconfiguration',
            name='event',
            field=models.OneToOneField(
                on_delete=models.deletion.CASCADE, primary_key=True,
                serialize=False, to='gatheros_event.Event', to_field='uuid',
                verbose_name='evento', related_name='feature_management',),
        ),
    ]
